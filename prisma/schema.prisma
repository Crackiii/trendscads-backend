generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model query_data {
  id            Int      @id @default(autoincrement())
  query         String
  related_story String   @db.VarChar(255)
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())
  links         Json
}

model scrapping_links {
  id             Int      @id @default(autoincrement())
  country        String   @db.VarChar(50)
  country_short  String   @db.VarChar(50)
  category       String   @db.VarChar(50)
  category_short String   @db.VarChar(50)
  created_at     DateTime @default(now())
  updated_at     DateTime @default(now())
}

model story_data {
  id               Int      @id @default(autoincrement())
  related_story_id String   @db.VarChar(255)
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now())
  related_queries  Json
  related_articles Json
}

model story_ids {
  id           Int      @id @default(autoincrement())
  country      String   @db.VarChar(100)
  category     String   @db.VarChar(100)
  story_id     String   @db.VarChar(200)
  related_link String   @db.VarChar(255)
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now())
}

model website_data {
  id                Int      @id @default(autoincrement())
  titles            String
  keywords          String
  favicon           String
  html              String
  url               String
  created_at        DateTime @default(now())
  updated_at        DateTime @default(now())
  is_trending       String
  related_category  String
  related_country   String
  related_query     String
  short_description String
  descriptions      Json
  images            Json
  all_images        Json
  related_articles  Json
  related_links     Json
  related_news      Json
  related_products  Json
  related_queries   Json
  related_videos    Json
  social            Json
}

model scrapping_errors {
  id          Int      @id @default(autoincrement())
  status      String
  status_code String
  reason      String
  job_id      String
  data        String
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
}
